/**
 * Ayer, en noche buena, una fam√≠lia cen√≥ por todo
 * lo alto... Con tanta copa üçæ encima todav√≠a no
 * han retirado los platos y la comida de ayer...
 *
 * Un ratoncillo llamado midurat üê≠, que vi√≥ ayer
 * el fest√≠n escondido, est√° relami√©ndose los bigotes
 * al ver todos los manjares que hay en el comedor.
 *
 * Eso s√≠, hay que tener cuidado üò∂ y s√≥lo hacer los
 * movimientos correctos para comer algo. Por eso,
 * el rat√≥n, que se ha visto los v√≠deos de midudev,
 * va a crear una funci√≥n para saber si su pr√≥ximo
 * movimiento es correcto o no ‚úÖ.
 *
 * El ratoncillo se puede mover en 4 direcciones:
 * up, down, left, right y el comedor es una matriz
 * (un array de arrays) donde cada posici√≥n puede ser:
 *
 * Un espacio vac√≠o es que no hay nada
 * Una m es el rat√≥n
 * Un * es la comida
 *
 * Vamos a ver unos ejemplos:
 *
 * const room = [
 *   [' ', ' ', ' '],
 *   [' ', ' ', 'm'],
 *   [' ', ' ', '*']
 * ]
 *
 * canMouseEat('up',    room)   // false
 * canMouseEat('down',  room)   // true
 * canMouseEat('right', room)   // false
 * canMouseEat('left',  room)   // false
 *
 * const room2 = [
 *   ['*', ' ', ' ', ' '],
 *   [' ', 'm', '*', ' '],
 *   [' ', ' ', ' ', ' '],
 *   [' ', ' ', ' ', '*']
 * ]
 *
 * canMouseEat('up',    room2)   // false
 * canMouseEat('down',  room2)   // false
 * canMouseEat('right', room2)   // true
 * canMouseEat('left',  room2)   // false
 *
 * ¬°Ten en cuenta que el rat√≥n quiere buscar
 * comida en diferentes habitaciones y que
 * cada una puede tener dimensiones diferentes!
 */

export default function canMouseEat(direction, game) {
  let pos = [];
  for (let i = 0; i < game.length; i++) {
    for (let j = 0; j < game[i].length; j++) {
      if (game[i][j] === "m") pos = [i, j];
    }
  }
  if (direction === "up") pos[0] -= 1;
  if (direction === "down") pos[0] += 1;
  if (direction === "left") pos[1] -= 1;
  if (direction === "right") pos[1] += 1;

  if (pos[0] > game.length - 1 || pos[0] < 0) return false;
  if (pos[1] > game[0].length - 1 || pos[1] < 0) return false;

  return game[pos[0]][pos[1]] === "*" ? true : false;
}
